{"version":3,"sources":["drizzleOptions.js","components/AgentBets.js","components/PredictionGraph.js","components/MakeBetModal.js","components/UpdateConsumptionModal.js","MyComponent.js","components/About.js","MyContainers.js","App.js","serviceWorker.js","index.js"],"names":["options","web3","block","fallback","type","url","contracts","events","polls","accounts","AgentBets","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","svgGradient","svgProps","react_default","a","createElement","id","offset","stopColor","React","cloneElement","children","fill","onClickClaim","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","methods","cacheSend","stop","onClickRank","_callee2","_context2","drizzle","PredictionMarket","account","betPredictionsDataKey","cacheCall","from","betAmountsDataKey","betWinningScalesDataKey","betTimestampsDataKey","canClaimDataKey","canRankDataKey","pm","getBetPredictionsForAgent","getBetAmountsForAgent","getBetWinningScalesForAgent","getBetTimestampsForAgent","button","canRank","value","Tooltip","title","Fab","size","onClick","style","fabStyle","BarChart_default","iconStyle","component","canClaim","console","log","MonetizationOn_default","display","alignItems","color","fontWeight","betPredictions","betAmounts","betWinningScales","betTimestamps","rows","i","betStatus","renderRankingStageOptions","push","Date","toUTCString","Math","pow","rowData","map","row","TableRow","key","TableCell","tableTitle","scope","join","hasFetchedData","justifyContent","paddingBottom","CircularProgress","processRowData","length","Table","aria-label","width","TableHead","TableBody","renderTableRows","Component","fontFamily","margin","height","backgroundColor","contextTypes","PropTypes","object","TIME_MARKERS","PredictionGraph","periodToTime","period","hour","floor","concat","oracleDataKeys","agentPredictionDataKeys","averagePredictionDataKeys","isOwner","state","currentDay","oracleDataKey","agentPredictionKey","averagePredictionKey","predictionMarket","getOracleConsumptions","getPredictions","getAveragePredictions","_this2","flexDirection","borderRadius","background","padding","variant","setState","disabled","data","victory_group","victory_axis","dependentAxis","fixLabelOverlap","crossAxis","label","tickValues","tickFormat","victory_line","name","victory_scatter","scatterStyle","_this3","paddingTop","day","oracleData","formatData","agentPredictionData","averagePredictionData","graphLineLabels","className","maxWidth","victory_chart","containerComponent","victory_voronoi_container","labels","_ref","datum","x","round","y","voronoiBlacklist","domain","animate","onExit","duration","victory_legend","orientation","colorScale","renderOraclePrices","renderAgentPredictions","renderAveragePredictions","renderGraphFooter","formattedData","parseInt","MakeBetModal","openModal","open","closeModal","onClickBet","predictions","betAmount","parsePredictions","isNaN","abrupt","toString","input","replace","split","Add_default","Modal","onClose","modalStyle","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","formStyle","TextField","multiline","rowsMax","fullWidth","onChange","target","error","helperText","Navigation_default","renderMakeBetButton","renderMakeBetModal","outline","marginTop","marginRight","UpdateConsumptionModal","onClickUpdate","consumption","currTimePeriodDataKey","currTimePeriod","getPeriodBeingUpdated","renderUpdateConsumptionButton","renderUpdateConsumptionModal","MyComponent","isOwnerDataKey","ownerDataKey","UpdateConsumptionModal_UpdateConsumptionModal","MakeBetModal_MakeBetModal","Box","boxShadow","roundedContainerStyle","components_AgentBets","alignContent","components_PredictionGraph","drizzle_react_components","accountIndex","units","precision","renderBetHistory","renderPredictionMarketOptions","contract","method","paddingLeft","paddingRight","About","stepIconGradient","agentInfoStyle","titleStyle","Computer_default","fontSize","agentPointStyle","Adjust_default","agentIconStyle","bettingCycleStyle","address","CheckCircle_default","stepCardRowStyle","stepCardStyle","stepTitleStyle","Receipt_default","stepIconStyle","Timelapse_default","introStyle","objectSpread","BubbleChart_default","renderIntro","renderBettingCycle","renderAgentInfo","marginBottom","borderWidth","borderStyle","borderColor","mapStateToProps","drizzleStatus","MainContainer","drizzleConnect","AboutContainer","App","react_router_dom","headerStyle","headingStyle","to","navStyle","react_router","exact","path","Dashboard","App_About","drizzle_react_plugin","drizzleOptions","textDecoration","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f47b6264.chunk.js","sourcesContent":["import PredictionMarket from \"./contracts/PredictionMarket.json\";\n\nconst options = {\n  web3: {\n    block: false,\n    fallback: {\n      type: \"ws\",\n      url: \"ws://127.0.0.1:8545\",\n    },\n  },\n  contracts: [PredictionMarket],\n  events: {\n    // add events here.\n  },\n  polls: {\n    accounts: 1500,\n  },\n};\n\nexport default options;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ClaimingIcon from '@material-ui/icons/MonetizationOn';\nimport Fab from '@material-ui/core/Fab';\nimport RankingIcon from '@material-ui/icons/BarChart';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nclass AgentBets extends Component {\n  constructor(props, context) {\n    super(props);\n    this.contracts = context.drizzle.contracts;\n    this.methods = this.contracts.PredictionMarket.methods;\n    this.account = this.props.accounts[0];\n    this.betPredictionsDataKey = this.methods[\"getBetPredictionsForAgent\"].cacheCall({from: this.account});\n    this.betAmountsDataKey = this.methods[\"getBetAmountsForAgent\"].cacheCall({from: this.account});\n    this.betWinningScalesDataKey = this.methods[\"getBetWinningScalesForAgent\"].cacheCall({from: this.account});\n    this.betTimestampsDataKey = this.methods[\"getBetTimestampsForAgent\"].cacheCall({from: this.account});\n    this.canClaimDataKey = this.methods[\"canClaim\"].cacheCall(this.account);\n    this.canRankDataKey = this.methods[\"canRank\"].cacheCall(this.account);\n  }\n\n  hasFetchedData() {\n    const pm = this.props.PredictionMarket;\n    if((this.betPredictionsDataKey in pm.getBetPredictionsForAgent)\n      && (this.betAmountsDataKey in pm.getBetAmountsForAgent)\n      && (this.betWinningScalesDataKey in pm.getBetWinningScalesForAgent)\n      && (this.betTimestampsDataKey in pm.getBetTimestampsForAgent)) {\n      return true\n    }\n    return false;\n  }\n\n  // Gradient component used for the icons in the buttons\n  svgGradient = svgProps => {\n    return (\n      <svg {...svgProps}>\n        <defs>\n          <linearGradient id=\"gradient1\">\n            <stop offset=\"30%\" stopColor=\"#d91a1a\" />\n            <stop offset=\"70%\" stopColor=\"#4e036e\" />\n          </linearGradient>\n        </defs>\n        {React.cloneElement(svgProps.children[0], {\n          fill: 'url(#gradient1)',\n        })}\n      </svg>\n    );\n  }\n\n  onClickClaim = async () => {\n    await this.methods[\"claimWinnings\"].cacheSend();\n  }\n\n  onClickRank = async () => {\n    await this.methods[\"rank\"].cacheSend();\n  }\n\n  renderRankingStageOptions() {\n    var button;\n\n    if (this.canRankDataKey in this.props.PredictionMarket.canRank) {\n      if (this.props.PredictionMarket.canRank[this.canRankDataKey].value) {\n        button = (\n          <Tooltip title=\"Rank Bet\">\n            <Fab size=\"small\" onClick={this.onClickRank} style={fabStyle}>\n              <RankingIcon style={iconStyle} component={this.svgGradient} />\n            </Fab>\n          </Tooltip>\n        )\n      } else if (this.canClaimDataKey in this.props.PredictionMarket.canClaim) {\n        console.log(this.props.PredictionMarket.canClaim[this.canClaimDataKey].value);\n        if (this.props.PredictionMarket.canClaim[this.canClaimDataKey].value) {\n          button = (\n            <Tooltip title=\"Claim Winnings\">\n              <Fab size=\"small\" onClick={this.onClickClaim} style={fabStyle}>\n                <ClaimingIcon style={iconStyle} component={this.svgGradient} />\n              </Fab>\n            </Tooltip>\n          )\n        }\n      }\n    }\n    return (\n      <div style={{display: 'flex', alignItems: 'center'}}>\n        <div style={{color: 'purple', fontWeight: 'bold'}}>RANKING</div>\n        {button}\n      </div>\n    )\n  }\n\n  processRowData(betPredictions, betAmounts, betWinningScales, betTimestamps) {\n    let rows = [];\n    for (let i = 0; i < 7; i++) {\n      // Check timestamp !== 0 to see if bet exists for that period\n      if (betTimestamps[i] !==  '0') {\n        let betStatus = <div style={{color: 'green', fontWeight: 'bold'}}>{'WON - CATEGORY ' + betWinningScales[i]}</div>;\n        if (betWinningScales[i] === '0') betStatus = <div style={{color: 'red', fontWeight: 'bold'}}>LOST</div>;\n        if (i === 0) betStatus = <div style={{color: 'blue', fontWeight: 'bold'}}>BETTING</div>;\n        if (i === 1) betStatus = <div style={{color: 'navy', fontWeight: 'bold'}}>WAITING</div>;\n        if (i === 2) betStatus = this.renderRankingStageOptions();\n        rows.push([new Date(betTimestamps[i] * 1000).toUTCString(),\n                     betAmounts[i] / (10 ** 18),\n                     betPredictions[i],\n                     betStatus,\n        ]);\n      }\n    }\n    return rows;\n  }\n\n  renderTableRows(rowData) {\n    return (\n      rowData.map(row => (\n        <TableRow key={row[0]}>\n          <TableCell style={tableTitle} component=\"th\" scope=\"row\">\n            {row[0]}\n          </TableCell>\n          <TableCell>{row[1]}</TableCell>\n          <TableCell>\n            {row[2].join(\", \")}\n          </TableCell>\n          <TableCell>{row[3]}</TableCell>\n        </TableRow>\n      ))\n    )\n  }\n\n  render() {\n    if(!this.hasFetchedData()) {\n      return (\n        <div style={{justifyContent: 'center', display: 'flex', paddingBottom: 40}}>\n          <CircularProgress size={100}/>\n        </div>\n      )\n    }\n\n    const pm = this.props.PredictionMarket;\n    const betPredictions = pm.getBetPredictionsForAgent[this.betPredictionsDataKey].value;\n    const betAmounts = pm.getBetAmountsForAgent[this.betAmountsDataKey].value;\n    const betWinningScales = pm.getBetWinningScalesForAgent[this.betWinningScalesDataKey].value;\n    const betTimestamps = pm.getBetTimestampsForAgent[this.betTimestampsDataKey].value;\n    var rowData = []\n    if (betTimestamps !== null) {\n      rowData = this.processRowData(betPredictions, betAmounts, betWinningScales, betTimestamps);\n    }\n    // const rowData = this.processRowData(betPredictions, betAmounts, betWinningScales, betTimestamps);\n\n    if (rowData.length === 0) {\n      return (\n        <div style = {{paddingBottom: 20}}>\n          <em>You have not placed any bets over the last 7 days.</em>\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <Table aria-label=\"simple table\" style={{width: '100%'}}>\n          <TableHead>\n            <TableRow>\n              <TableCell style={tableTitle}>Timestamp</TableCell>\n              <TableCell style={tableTitle}>Amount Bet (Ether)</TableCell>\n              <TableCell style={tableTitle}>Predictions (kWh)</TableCell>\n              <TableCell style={tableTitle}>Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.renderTableRows(rowData)}\n          </TableBody>\n        </Table>\n      </div>\n    )\n  }\n}\n\nconst tableTitle = {\n  fontWeight: 900,\n  fontFamily: 'Poppins',\n};\n\nconst fabStyle = {\n  margin: 10,\n  width: 35,\n  height: 35,\n  backgroundColor: 'white',\n};\n\nconst iconStyle = {\n  width: 20,\n  height: 20,\n}\n\nAgentBets.contextTypes = {\n  drizzle: PropTypes.object,\n};\n\nexport default AgentBets\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {VictoryChart, VictoryGroup, VictoryVoronoiContainer,\n        VictoryScatter, VictoryAxis, VictoryLine, VictoryLegend} from 'victory';\nimport Fab from '@material-ui/core/Fab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst TIME_MARKERS = [\"Tomorrow\", \"Today\", \"Yesterday\", \"2 Days Before\",\n                     \"3 Days Before\", \"4 Days Before\", \"5 Days Before\"];\n\nclass PredictionGraph extends React.Component {\n\n    constructor(props, context) {\n      super(props);\n      this.oracleDataKeys = [];\n      this.agentPredictionDataKeys = [];\n      this.averagePredictionDataKeys = [];\n      for (let i = 0; i < 7; i++) {\n        this.oracleDataKeys.push(\n          context.drizzle.contracts.PredictionMarket.methods[\"getOracleConsumptions\"].cacheCall(i)\n        );\n        if (props.isOwner) {\n          this.averagePredictionDataKeys.push(\n            context.drizzle.contracts.PredictionMarket.methods[\"getAveragePredictions\"].cacheCall(i)\n          );\n        } else {\n          this.agentPredictionDataKeys.push(\n            context.drizzle.contracts.PredictionMarket.methods[\"getPredictions\"].cacheCall(i)\n          );\n        }\n      }\n      this.state = {currentDay: 1};\n    }\n\n    hasFetchedData() {\n      for (let i = 0; i < 7; i++) {\n        const oracleDataKey = this.oracleDataKeys[i];\n        const agentPredictionKey = this.agentPredictionDataKeys[i];\n        const averagePredictionKey = this.averagePredictionDataKeys[i];\n        const pm = this.props.predictionMarket;\n        if (!(oracleDataKey in pm.getOracleConsumptions) &&\n            !(agentPredictionKey in pm.getPredictions) &&\n            !(averagePredictionKey in pm.getAveragePredictions)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    renderGraphFooter() {\n      return (\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-around',\n            alignItems: 'center',\n            borderRadius: 35,\n            background: 'linear-gradient(to right bottom, #2d1896, #0d2ca8)',\n            padding: 10,\n        }}>\n          <Fab\n            variant=\"extended\"\n            size=\"medium\"\n            color=\"primary\"\n            aria-label=\"add\"\n            onClick={() => void this.setState({currentDay: this.state.currentDay + 1})}\n            disabled={this.state.currentDay === 6}\n          >\n            BACK\n          </Fab>\n          <p style={{color: 'white'}}>{TIME_MARKERS[this.state.currentDay]}</p>\n          <Fab\n            variant=\"extended\"\n            size=\"medium\"\n            color=\"primary\"\n            aria-label=\"add\"\n            onClick={() => void this.setState({currentDay: this.state.currentDay - 1})}\n            disabled={this.state.currentDay === 0}\n          >\n            NEXT\n          </Fab>\n        </div>\n      );\n    }\n\n    renderOraclePrices(data) {\n      return (\n        <VictoryGroup data={data} style={{ data: { fill: '#a10d2d' }}}>\n          <VictoryAxis dependentAxis fixLabelOverlap />\n          <VictoryAxis crossAxis fixLabelOverlap\n            label=\"Time\"\n            tickValues={[4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48]}\n            tickFormat={this.periodToTime}\n          />\n          <VictoryLine name='oracle'/>\n          <VictoryScatter style={{ data: { fill: '#a10d2d' }}}/>\n        </VictoryGroup>\n      );\n    }\n\n    renderAgentPredictions(data) {\n      if (!this.props.isOwner) {\n        return (\n          <VictoryGroup data={data} style={scatterStyle}>\n            <VictoryLine name='agentPredictions'/>\n            <VictoryScatter style={scatterStyle}/>\n          </VictoryGroup>\n        );\n      }\n    }\n\n    renderAveragePredictions(data) {\n      if (this.props.isOwner) {\n        return (\n          <VictoryGroup data={data} style={{ data: { fill: '#4e036e' }}}>\n            <VictoryLine name='averagePredictions'/>\n            <VictoryScatter style={scatterStyle}/>\n          </VictoryGroup>\n        )\n      }\n    }\n\n    render() {\n        if (!this.hasFetchedData()) {\n          return (\n            <div style={{justifyContent: 'center', display: 'flex', paddingTop: 30}}>\n              <CircularProgress size={150}/>\n            </div>\n          );\n        }\n\n        const day = this.state.currentDay;\n        const pm = this.props.predictionMarket;\n\n        const oracleDataKey = this.oracleDataKeys[day];\n        var oracleData = this.formatData(pm.getOracleConsumptions[oracleDataKey].value);\n\n        const agentPredictionKey = this.agentPredictionDataKeys[day];\n        const averagePredictionKey = this.averagePredictionDataKeys[day];\n        var agentPredictionData = [];\n        var averagePredictionData = [];\n        var graphLineLabels = [];\n        if (this.props.isOwner) {\n          graphLineLabels = [{name: \"Real Consumption\"}, {name: \"Average Prediction\"}]\n          averagePredictionData = this.formatData(pm.getAveragePredictions[averagePredictionKey].value);\n        } else {\n          graphLineLabels = [{name: \"Real Consumption\"}, {name: \"Your Prediction\"}];\n          agentPredictionData = this.formatData(pm.getPredictions[agentPredictionKey].value);\n        }\n\n        return (\n          <div className=\"section\" style={{maxWidth: '720px'}}>\n            <h1 style={{fontFamily: 'Poppins', display: 'flex', justifyContent: 'center'}}>\n              Energy Consumption Data\n            </h1>\n            <div style={{borderRadius: '8px', backgroundColor: 'white'}}>\n              <VictoryChart\n                containerComponent={\n                  <VictoryVoronoiContainer\n                    labels={({ datum }) => `${this.periodToTime(datum.x)}, ${Math.round(datum.y, 2)}`}\n                    voronoiBlacklist={['oracle']}\n                  />\n                }\n                domain={{y: [0, 2500]}}\n                animate={{\n                  onExit: {duration: 400}\n                }}\n              >\n                <VictoryLegend\n                  orientation=\"horizontal\"\n                  colorScale={[ \"#a10d2d\", \"navy\"]}\n                  data={graphLineLabels}\n                />\n                {this.renderOraclePrices(oracleData)}\n                {this.renderAgentPredictions(agentPredictionData)}\n                {this.renderAveragePredictions(averagePredictionData)}\n              </VictoryChart>\n            </div>\n            {this.renderGraphFooter()}\n          </div>\n        );\n    }\n\n    formatData(data) {\n      if (data === null) return;\n      let formattedData = [];\n      for (let i = 0; i < data.length; i++) {\n        const y = parseInt(data[i]);\n        if (y === 0) break;\n        formattedData.push({x: i, y: y});\n      }\n      // VictoryChart data cannot take an empty array\n      if (formattedData.length === 0) {\n        formattedData.push({x: 0, y: 0});\n      }\n      return formattedData;\n    }\n\n    periodToTime = (period) => {\n      const hour = Math.floor((period + 1) / 2);\n      if ((period + 1) % 2 === 0) {\n        return `${hour}:00`\n      }\n      return `${hour}:30`;\n    }\n}\n\nconst scatterStyle = {\n  data: {\n    fill: 'navy'\n  }\n};\n\nPredictionGraph.contextTypes = {\n  drizzle: PropTypes.object\n}\n\nexport default PredictionGraph;\n","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\n\nexport default class MakeBetModal extends React.Component {\n\n  constructor(props, context) {\n    super(props);\n    this.drizzle = context.drizzle;\n    this.state = {\n      open: false, // for the modal opening/closing\n      predictions: '', // 48 data point prediction\n      betAmount: '0' // Amount to bet in ether\n    };\n  }\n\n  openModal = () => {\n    this.setState({open: true});\n  };\n\n  closeModal = () => {\n    this.setState({open: false});\n  };\n\n  onClickBet = async () => {\n    const predictions = this.parsePredictions(this.state.predictions);\n\n    // Converting betAmount to Wei and handling errors\n    const betAmount = parseInt(this.state.betAmount) * Math.pow(10, 18);\n    if (isNaN(betAmount) || betAmount === 0) return;\n\n    const data = {value: betAmount.toString()}\n\n    // Calling function - will prompt MetaMask verification\n    await this.drizzle.contracts.PredictionMarket.methods[\"placeBet\"]\n              .cacheSend(predictions, data);\n\n    // Reset form and close modal\n    this.setState({predictions: '', betAmount: '0'});\n    this.closeModal();\n  }\n\n  parsePredictions(input) {\n    // input is in form \"1, 2, 3...48\"\n    // output is in form [1, 2, 3, ...48]\n    return input.replace(/\\s/g,'') // remove whitespace\n                .split(\",\"); // split entries by comma\n  }\n\n  // Gradient component used for the icons in the buttons\n  svgGradient = svgProps => {\n    return (\n      <svg {...svgProps}>\n        <defs>\n          <linearGradient id=\"gradient1\">\n            <stop offset=\"30%\" stopColor=\"#d91a1a\" />\n            <stop offset=\"70%\" stopColor=\"#4e036e\" />\n          </linearGradient>\n        </defs>\n        {React.cloneElement(svgProps.children[0], {\n          fill: 'url(#gradient1)',\n        })}\n      </svg>\n    );\n  }\n\n  renderMakeBetButton() {\n    return (\n      <Fab variant=\"extended\"\n        onClick={this.openModal}\n        style={fabStyle}>\n        <AddIcon\n          style={iconStyle}\n          color=\"inherit\"\n          component={this.svgGradient}\n        />\n        Make Bet\n      </Fab>\n    );\n  }\n\n  renderMakeBetModal() {\n    return (\n      <Modal\n        open={this.state.open}\n        onClose={this.closeModal}\n        style={modalStyle}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={this.state.open}>\n          <div style={formStyle}>\n            <h2>Predict the energy prices of tomorrow.</h2>\n            <p>A prediction consists of 48 data points throughout the day.\n              Please separate your predictions with a comma.</p>\n            <p>The first prediction is the consumption for 00:30am,\n              the second is for 1:00am and so on.</p>\n            <TextField\n              label=\"Predictions\"\n              multiline\n              rowsMax=\"4\"\n              fullWidth={true}\n              value={this.state.predictions}\n              onChange={input => this.setState({predictions: input.target.value})}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n            <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n              <TextField\n                label=\"ETH\"\n                multiline\n                rowsMax=\"1\"\n                value={this.state.betAmount}\n                error={isNaN(parseInt(this.state.betAmount))}\n                helperText={isNaN(parseInt(this.state.betAmount)) ? 'Must be a number' : ''}\n                onChange={input => this.setState({betAmount: input.target.value})}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <Fab variant=\"extended\"\n                style={fabStyle}\n                onClick={this.onClickBet}\n              >\n                <NavigationIcon\n                  style={iconStyle}\n                  component={this.svgGradient}\n                />\n                BET\n              </Fab>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderMakeBetButton()}\n        {this.renderMakeBetModal()}\n      </div>\n    );\n  }\n\n}\n\nconst modalStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\nconst formStyle = {\n  borderRadius: 20,\n  backgroundColor: 'white',\n  padding: 25,\n  outline: 'none'\n};\n\nconst fabStyle = {\n  marginTop: 17,\n  marginRight: 20,\n  backgroundColor: 'white'\n};\n\nconst iconStyle = {\n  marginRight: 5\n};\n\nMakeBetModal.contextTypes = {\n  drizzle: PropTypes.object\n}\n","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\n\nexport default class UpdateConsumptionModal extends React.Component {\n\n  constructor(props, context) {\n    super(props);\n    this.drizzle = context.drizzle;\n    this.state = {\n      open: false, // for the modal opening/closing\n      consumption: '0' // consumption value being fed in\n    };\n    this.currTimePeriodDataKey = this.drizzle.contracts.PredictionMarket.methods[\"currTimePeriod\"].cacheCall();\n  }\n\n  openModal = () => {\n    this.setState({open: true});\n  };\n\n  closeModal = () => {\n    this.setState({open: false});\n  };\n\n  onClickUpdate = async () => {\n    if (isNaN(this.state.consumption)) return;\n\n    // Calling function - will prompt MetaMask verification\n    await this.drizzle.contracts.PredictionMarket.methods[\"updateConsumption\"]\n              .cacheSend(this.state.consumption);\n\n    // Reset form and close modal\n    this.setState({consumption: '0'});\n    this.closeModal();\n  }\n\n  // Gradient component used for the icons in the buttons\n  svgGradient = svgProps => {\n    return (\n      <svg {...svgProps}>\n        <defs>\n          <linearGradient id=\"gradient1\">\n            <stop offset=\"30%\" stopColor=\"#d91a1a\" />\n            <stop offset=\"70%\" stopColor=\"#4e036e\" />\n          </linearGradient>\n        </defs>\n        {React.cloneElement(svgProps.children[0], {\n          fill: 'url(#gradient1)',\n        })}\n      </svg>\n    );\n  }\n\n  renderUpdateConsumptionButton() {\n    return (\n      <Fab variant=\"extended\"\n        onClick={this.openModal}\n        style={fabStyle}>\n        <AddIcon\n          style={iconStyle}\n          color=\"inherit\"\n          component={this.svgGradient}\n        />\n        Update Consumption\n      </Fab>\n    );\n  }\n\n  getPeriodBeingUpdated() {\n    if (this.currTimePeriodDataKey in this.props.predictionMarket.currTimePeriod) {\n      const currTimePeriod = this.props.predictionMarket.currTimePeriod[this.currTimePeriodDataKey].value;\n      const hour = Math.floor(currTimePeriod / 2);\n      if (currTimePeriod % 2 === 0) {\n        return ` spanning time period ${hour}:00 - ${hour}:30.`;\n      }\n      return ` spanning time period ${hour}:30 - ${(hour + 1) % 24}:00.`;\n    }\n    return \".\";\n  }\n\n  renderUpdateConsumptionModal() {\n    return (\n      <Modal\n        open={this.state.open}\n        onClose={this.closeModal}\n        style={modalStyle}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={this.state.open}>\n          <div style={formStyle}>\n            <h2>Input true values of consumption.</h2>\n            <p>Actual consumption values should be updated by the oracle at 30 minute intervals throughout the day.</p>\n            <p>Manually update the total consumption for the next 30 minute interval{this.getPeriodBeingUpdated()}</p>\n            <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n              <TextField\n                label=\"Consumption (kWh)\"\n                multiline\n                rowsMax=\"1\"\n                value={this.state.consumption}\n                error={isNaN(parseInt(this.state.consumption))}\n                helperText={isNaN(parseInt(this.state.consumption)) ? 'Must be a number' : ''}\n                onChange={input => this.setState({consumption: input.target.value})}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <Fab variant=\"extended\"\n                style={fabStyle}\n                onClick={this.onClickUpdate}\n              >\n                <NavigationIcon\n                  style={iconStyle}\n                  component={this.svgGradient}\n                />\n                UPDATE\n              </Fab>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderUpdateConsumptionButton()}\n        {this.renderUpdateConsumptionModal()}\n      </div>\n    );\n  }\n\n}\n\nconst modalStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\nconst formStyle = {\n  borderRadius: 20,\n  backgroundColor: 'white',\n  padding: 25,\n  outline: 'none'\n};\n\nconst fabStyle = {\n  marginTop: 17,\n  marginRight: 20,\n  backgroundColor: 'white'\n};\n\nconst iconStyle = {\n  marginRight: 5\n};\n\nUpdateConsumptionModal.contextTypes = {\n  drizzle: PropTypes.object\n}\n","import React, { Component } from \"react\";\nimport {\n  AccountData,\n  ContractData,\n} from \"@drizzle/react-components\";\nimport PropTypes from 'prop-types'\nimport AgentBets from './components/AgentBets';\nimport PredictionGraph from './components/PredictionGraph';\nimport MakeBetModal from './components/MakeBetModal';\nimport UpdateConsumptionModal from './components/UpdateConsumptionModal';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./App.css\";\n\nclass MyComponent extends Component {\n  constructor(props, context) {\n    super(props);\n    this.methods = context.drizzle.contracts.PredictionMarket.methods;\n    this.isOwnerDataKey = this.methods[\"isOwner\"].cacheCall({from: this.props.accounts[0]});\n    this.ownerDataKey = this.methods[\"owner\"].cacheCall();\n    this.isOwner = false;\n  }\n\n  renderPredictionMarketOptions() {\n    if (this.isOwner) {\n      return (\n        <div>\n        <UpdateConsumptionModal predictionMarket = {this.props.PredictionMarket} />\n        </div>\n      )\n    } else {\n      return (\n        <div>\n        <MakeBetModal />\n        </div>\n      )\n    }\n  }\n\n  renderBetHistory() {\n    if (!this.isOwner) {\n      return (\n        <Box boxShadow={1} className=\"section\" style={roundedContainerStyle}>\n          <h2>Bet History</h2>\n          <AgentBets PredictionMarket = {this.props.PredictionMarket} accounts = {this.props.accounts} />\n        </Box>\n      );\n    }\n  }\n\n  render() {\n    if (!(this.isOwnerDataKey in this.props.PredictionMarket.isOwner)) {\n      return (\n        <div style={{padding: 20, justifyContent: 'center', display: 'flex'}}>\n          <CircularProgress size={300}/>\n        </div>\n      );\n    }\n    this.isOwner = this.props.PredictionMarket.isOwner[this.isOwnerDataKey].value;\n\n    return (\n      <div style={{padding: 20, alignContent: 'center'}}>\n        <PredictionGraph predictionMarket={this.props.PredictionMarket} isOwner={this.isOwner}  />\n\n        <Box boxShadow={1} className=\"section\" style={roundedContainerStyle}>\n          <h2>Active Account</h2>\n          <AccountData accountIndex={0} units=\"ether\" precision={3} />\n        </Box>\n        {this.renderBetHistory()}\n        <Box boxShadow={1} className=\"section\" style={roundedContainerStyle}>\n          <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n            <h2>Prediction Market</h2>\n            {this.renderPredictionMarketOptions()}\n          </div>\n          <p>\n            <strong>Top tier threshold: </strong>\n            <ContractData contract=\"PredictionMarket\" method=\"TOP_TIER_THRESHOLD\" />\n          </p>\n          <p>\n            <strong>Mid tier threshold: </strong>\n            <ContractData contract=\"PredictionMarket\" method=\"MID_TIER_THRESHOLD\" />\n          </p>\n        </Box>\n      </div>\n    )\n  }\n}\n\nconst roundedContainerStyle = {\n  borderRadius: '12px',\n  paddingTop: 7,\n  paddingBottom: 7,\n  paddingLeft: 15,\n  paddingRight: 15,\n  backgroundColor: '#f6f6f6'\n};\n\nMyComponent.contextTypes = {\n  drizzle: PropTypes.object,\n};\n\nexport default MyComponent;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport BettingIcon from '@material-ui/icons/Receipt';\nimport WaitingIcon from '@material-ui/icons/Timelapse';\nimport RankingIcon from '@material-ui/icons/BarChart';\nimport ClaimingIcon from '@material-ui/icons/MonetizationOn';\nimport BubbleIcon from '@material-ui/icons/BubbleChart';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport BulletPointIcon from '@material-ui/icons/Adjust';\nimport '../index.css';\n\nexport default class About extends React.Component {\n\n  constructor(props, context) {\n    super(props);\n    this.pm = context.drizzle.contracts.PredictionMarket;\n  }\n\n  // Red gradient for betting cycle diagram\n  stepIconGradient = svgProps => (\n    <svg {...svgProps}>\n      <defs>\n        <linearGradient id=\"gradient2\">\n          <stop offset=\"30%\" stopColor=\"#78036e\" />\n          <stop offset=\"70%\" stopColor=\"#d91a1a\" />\n        </linearGradient>\n      </defs>\n      {React.cloneElement(svgProps.children[0], {\n        fill: 'url(#gradient2)',\n      })}\n    </svg>\n  );\n\n  renderAgentInfo() {\n    return (\n      <div style={agentInfoStyle}>\n        <h1 style={titleStyle}>\n          {<ComputerIcon style={{fontSize: '100px', paddingRight: 15}} />}\n          What do agents do?\n        </h1>\n        <h3 style={agentPointStyle}>\n          {<BulletPointIcon style={agentIconStyle} />}\n          Make monetary gains for accurately predicting future energy consumption\n        </h3>\n        <h3 style={agentPointStyle}>\n          {<BulletPointIcon style={agentIconStyle} />}\n          Develop advanced prediction algorithms or models to improve prediction\n        </h3>\n        <h3 style={agentPointStyle}>\n          {<BulletPointIcon style={agentIconStyle} />}\n          Help energy suppliers get a better prediction of energy consumption to improve demand/supply management\n        </h3>\n      </div>\n    )\n  }\n\n  renderBettingCycle() {\n    return (\n      <div>\n        <h3 style={titleStyle}>One betting cycle explained.</h3>\n        <div style={bettingCycleStyle}>\n          <h3>\n            The prediction market is live at {this.pm.address}\n          </h3>\n          <CheckCircle \n            style={{paddingLeft: '5px', fontSize: '28px'}}\n            component={svgProps => (\n              <svg {...svgProps}>\n                <defs>\n                  <linearGradient id=\"gradient1\">\n                    <stop offset=\"30%\" stopColor=\"#4beb76\" />\n                    <stop offset=\"70%\" stopColor=\"#5bde80\" />\n                  </linearGradient>\n                </defs>\n                {React.cloneElement(svgProps.children[0], {\n                  fill: 'url(#gradient1)',\n                })}\n              </svg>\n            )} />\n          </div>\n          <div style={stepCardRowStyle}>\n            <div style={stepCardStyle}>\n              <p style={stepTitleStyle}>\n                {<BettingIcon style={stepIconStyle} component={this.stepIconGradient} />}\n                Betting</p>\n              <p>\n                Predict the energy prices of the next day. You must predict for 48 data points\n                throughout the day.\n              </p>\n            </div>\n            <div style={stepCardStyle}>\n              <p style={stepTitleStyle}>\n                {<WaitingIcon style={stepIconStyle} component={this.stepIconGradient} />}\n                Waiting\n              </p>\n              <p>\n                Wait for the oracle to feed in the true energy consumption for the next day.\n              </p>\n            </div>\n            <div style={stepCardStyle}>\n              <p style={stepTitleStyle}>\n                {<RankingIcon style={stepIconStyle} component={this.stepIconGradient} />} \n                Ranking\n              </p>\n              <p>\n                Rank your bet to see if you fall into any winning category.\n              </p>\n            </div>\n            <div style={stepCardStyle}>\n              <p style={stepTitleStyle}>\n                {<ClaimingIcon style={stepIconStyle} component={this.stepIconGradient} />}\n                Claiming\n              </p>\n              <p>\n                If you've won, collect your winnings! We have different winning thresholds \n                to award the best with more.\n              </p>\n            </div>\n          </div>\n        </div>\n    );\n  }\n\n  renderIntro() {\n    return (\n      <div style={introStyle}>\n        <h1 style={{...titleStyle, color: 'white', paddingLeft: 100}}>\n          Monetising IOT device data using blockchain and ML.\n        </h1>\n        <BubbleIcon style={{...titleStyle, fontSize: '100px', color: 'white'}} />\n        <h3 style={{color: 'white', paddingLeft: 260}}>\n          This prediction market system monetizes data that is collected \n          from IoT devices. The IoT devices are usually deployed with an \n          agent that has access to streams of sensor data and a machine \n          learning framework for training prediction algorithms. The \n          monetisation of the individual's data occurs via this prediction \n          market which is implemented as a smart contract.\n        </h3>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderIntro()}\n        {this.renderBettingCycle()}\n        {this.renderAgentInfo()}\n      </div>\n    );\n  }\n}\n\nAbout.contextTypes = {\n  drizzle: PropTypes.object\n}\n\nconst titleStyle = {\n  justifyContent: 'center',\n  fontFamily: 'Raleway',\n  display: 'flex',\n  fontSize: '40px',\n  alignItems: 'center',\n};\n\nconst introStyle = {\n  display: 'flex', \n  backgroundColor: 'black', \n  padding: 50, \n  alignItems: 'center'\n}\n\nconst stepCardRowStyle = {\n  paddingLeft: 100,\n  paddingRight: 100,\n  marginBottom: 80,\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-between'\n};\n\nconst stepTitleStyle = {\n  fontFamily: 'Raleway',\n  display: 'flex',\n  fontSize: '35px',\n  marginBottom: 50,\n};\n\nconst stepIconStyle = {\n  fontSize: '45px',\n  paddingRight: '7px'\n};\n\nconst stepCardStyle = {\n  borderRadius: '12px', \n  paddingLeft: 30,\n  paddingRight: 30,\n  marginBottom: 30,\n  borderWidth: '3px',\n  borderStyle: 'solid',\n  borderColor: 'black',\n  height: '350px',\n  width: '180px',\n};\n\nconst bettingCycleStyle = {\n  display: 'flex', \n  flexDirection: 'row', \n  alignItems: 'center', \n  marginBottom: 18, \n  justifyContent: 'center'\n};\n\n// Style for each point in 'What do agents do?'\nconst agentPointStyle = {\n  display: 'flex', \n  alignItems: 'center', \n  paddingLeft: 80\n};\n\n// Style for bullet points\nconst agentIconStyle = {\n  ...stepIconStyle,\n  color: '#ad1868'\n};\n\nconst agentInfoStyle =  {\n  backgroundColor: '#e6e6e6', \n  display: 'flex', \n  flexDirection: 'column', \n  padding: 50\n};\n","import MyComponent from \"./MyComponent\";\nimport { drizzleConnect } from \"@drizzle/react-plugin\";\nimport About from './components/About';\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.accounts,\n    PredictionMarket: state.contracts.PredictionMarket,\n    drizzleStatus: state.drizzleStatus,\n  };\n};\n\nexport const MainContainer = drizzleConnect(MyComponent, mapStateToProps);\nexport const AboutContainer = drizzleConnect(About, mapStateToProps);\n","import React, { Component } from \"react\";\nimport { DrizzleProvider } from \"@drizzle/react-plugin\";\nimport { LoadingContainer } from \"@drizzle/react-components\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport drizzleOptions from \"./drizzleOptions\";\nimport { MainContainer, AboutContainer } from \"./MyContainers\";\nimport './index.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div style={headerStyle}>\n          <h1 style={headingStyle}>\n            CHARJE\n          </h1>\n          <Link to=\"/about\" style={navStyle}>\n            <h4 style={headingStyle}>\n              ABOUT\n            </h4>\n          </Link>\n          <Link to=\"/\" style={navStyle}>\n            <h4 style={headingStyle}>\n              DASHBOARD\n            </h4>\n          </Link>\n        </div>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nfunction Dashboard() {\n  return (\n    <DrizzleProvider options={drizzleOptions}>\n      <LoadingContainer>\n        <MainContainer />\n      </LoadingContainer>\n    </DrizzleProvider>\n  );\n}\n\nfunction About() {\n  return (\n    <DrizzleProvider options={drizzleOptions}>\n      <LoadingContainer>\n        <AboutContainer />\n      </LoadingContainer>\n    </DrizzleProvider>\n  );\n}\n\nconst headerStyle = {\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  background: 'linear-gradient(to right bottom, #4e036e, #d91a1a)',\n  borderRadius: 0,\n  paddingLeft: 50,\n};\n\nconst navStyle = {\n  textDecoration: 'none'\n};\n\nconst headingStyle = {\n  fontFamily: 'Poppins',\n  color: 'white',\n  paddingLeft: 55\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}